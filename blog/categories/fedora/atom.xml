<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: fedora | Germán Racca Blog]]></title>
  <link href="http://gracca.github.io/blog/categories/fedora/atom.xml" rel="self"/>
  <link href="http://gracca.github.io/"/>
  <updated>2013-07-02T20:08:43-03:00</updated>
  <id>http://gracca.github.io/</id>
  <author>
    <name><![CDATA[Germán A. Racca]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Introducción a GTK+ 3 en Python | Getting started with Python GTK+ 3]]></title>
    <link href="http://gracca.github.io/blog/2013/06/27/introduccion-a-gtk-plus-3-en-python-%7C-getting-started-with-python-gtk-plus-3/"/>
    <updated>2013-06-27T18:22:00-03:00</updated>
    <id>http://gracca.github.io/blog/2013/06/27/introduccion-a-gtk-plus-3-en-python-|-getting-started-with-python-gtk-plus-3</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://gracca.github.io/images/python+gtk.png" width="156" height="162" title="Python & Gtk+ 3" ></p>

<p>
Esta especie de tutorial de <a href="http://live.gnome.org/PyGObject">PyGObject</a> (<a href="http://www.python.org">Python</a> y <a href="http://www.gtk.org">GTK+ 3</a>) es casi una traducción literal de su <a href="http://python-gtk-3-tutorial.readthedocs.org">documentación</a>. Más que un tutorial, es el ejemplo más simple de como crear una ventana vacía. Seguidamente, extenderemos el script para agregarle un botón que realiza una determinada acción. Se necesita un conocimiento razonable del lenguaje Python, el cual dudo en tener :-)
</p>




<!-- more -->


<p>Antes de comenzar, recomiendo los siguientes documentos para que podamos aprender un poco más sobre PyGObject:</p>

<ul>
<li><p><a href="http://python-gtk-3-tutorial.readthedocs.org">http://python-gtk-3-tutorial.readthedocs.org</a></p></li>
<li><p><a href="http://developer.gnome.org/gnome-devel-demos/stable/tutorial.py.html.en">https://developer.gnome.org/gnome-devel-demos/stable/tutorial.py.html.en</a></p></li>
<li><p><a href="http://pfrields.fedorapeople.org/presentations/OhioLF2011/PyGObject.pdf">http://pfrields.fedorapeople.org/presentations/OhioLF2011/PyGObject.pdf</a></p></li>
<li><p><a href="https://developer.gnome.org/gtk3/">https://developer.gnome.org/gtk3/</a></p></li>
</ul>


<h2>Ejemplo Simple</h2>

<p>Para comenzar, crearemos el ejemplo más simple posible, el cual consiste de una ventana vacía.</p>

<p><img class="center" src="http://gracca.github.io/images/pygobject_01.png" title="Ejemplo simple: ventana vacía" ></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>ejemplo_simple.py  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">!</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">from</span> <span class="nn">gi.repository</span> <span class="kn">import</span> <span class="n">Gtk</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">win</span> <span class="o">=</span> <span class="n">Gtk</span><span class="o">.</span><span class="n">Window</span><span class="p">()</span>
</span><span class='line'><span class="n">win</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="s">&quot;delete-event&quot;</span><span class="p">,</span> <span class="n">Gtk</span><span class="o">.</span><span class="n">main_quit</span><span class="p">)</span>
</span><span class='line'><span class="n">win</span><span class="o">.</span><span class="n">show_all</span><span class="p">()</span>
</span><span class='line'><span class="n">Gtk</span><span class="o">.</span><span class="n">main</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Explicaremos ahora cada línea del ejemplo.</p>

<pre><code>#!/usr/bin/python
</code></pre>

<p>La primera línea de todos los programas en Python debe empezar con <code>#!</code> seguido del camino al intérprete Python que queremos invocar.</p>

<pre><code>from gi.repository import Gtk
</code></pre>

<p>Para poder acceder a las clases y funciones de GTK+, primero debemos importar el módulo Gtk. La próxima línea crea una ventana vacía.</p>

<pre><code>win = Gtk.Window()
</code></pre>

<p>Seguidamente, conectamos la ventana a su evento <em>delete</em> para asegurarnos de que la aplicación termine al cliquear en la <em>x</em> de la ventana.</p>

<pre><code>win.connect("delete-event", Gtk.main_quit)
</code></pre>

<p>En el próximo paso mostramos la ventana.</p>

<pre><code>win.show_all()
</code></pre>

<p>Finalmente, iniciamos el <em>loop</em> de procesamiento de GTK+, del cual saldremos cuando la ventana sea cerrada (ver línea 5).</p>

<pre><code>Gtk.main()
</code></pre>

<p>Para ejecutar el programa, abrimos una terminal, cambiamos el directorio hasta donde está el archivo (al cual le llamé <em>ejemplo_simple.py</em>), y ponemos:</p>

<pre><code>$ python ejemplo_simple.py
</code></pre>

<p>Alternativamente, podemos darle permisos de ejecución y luego ejecutarlo:</p>

<pre><code>$ chmod +x ejemplo_simple.py
$ ./ejemplo_simple.py
</code></pre>

<h2>Ejemplo Extendido</h2>

<p>Para algo un poco más útil, aquí está la vesión en PyGObject del clásico programa <em>Hello World</em>.</p>

<p><img class="center" src="http://gracca.github.io/images/pygobject_02.png" title="Ejemplo extendido: ventana + botón" ></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>ejemplo_extendido.py  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">!</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">from</span> <span class="nn">gi.repository</span> <span class="kn">import</span> <span class="n">Gtk</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">MyWindow</span><span class="p">(</span><span class="n">Gtk</span><span class="o">.</span><span class="n">Window</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="n">Gtk</span><span class="o">.</span><span class="n">Window</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">title</span><span class="o">=</span><span class="s">&quot;Hello World&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">button</span> <span class="o">=</span> <span class="n">Gtk</span><span class="o">.</span><span class="n">Button</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s">&quot;Click Here&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">button</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="s">&quot;clicked&quot;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">on_button_clicked</span><span class="p">)</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">button</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">on_button_clicked</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">widget</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;Hello World&quot;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">win</span> <span class="o">=</span> <span class="n">MyWindow</span><span class="p">()</span>
</span><span class='line'><span class="n">win</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="s">&quot;delete-event&quot;</span><span class="p">,</span> <span class="n">Gtk</span><span class="o">.</span><span class="n">main_quit</span><span class="p">)</span>
</span><span class='line'><span class="n">win</span><span class="o">.</span><span class="n">show_all</span><span class="p">()</span>
</span><span class='line'><span class="n">Gtk</span><span class="o">.</span><span class="n">main</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>A diferencia del ejemplo simple, aquí creamos una sub-clase de <code>Gtk.Window</code> para definir nuestra propia clase <code>MyWindow</code>.</p>

<pre><code>class MyWindow(Gtk.Window):
</code></pre>

<p>En el constructor de la clase, tenemos que llamar al constructor de la super-clase. Además, le diremos que dé el valor de <code>Hello World</code> a la propiedad <code>title</code>.</p>

<pre><code>Gtk.Window.__init__(self, title="Hello World")
</code></pre>

<p>Las próximas tres líneas son usadas para crear un botón (<a href="http://es.wikipedia.org/wiki/Widget"><em>widget</em></a>), conectarlo a su señal <code>clicked</code>, y adicionarlo como hijo a la ventana.</p>

<pre><code>self.button = Gtk.Button(label="Click Here")
self.button.connect("clicked", self.on_button_clicked)
self.add(self.button)
</code></pre>

<p>En consecuencia, el método <code>on_button_clicked()</code> será llamado si cliqueamos en el botón.</p>

<pre><code>def on_button_clicked(self, widget):
    print "Hello World"
</code></pre>

<p>El último bloque, fuera de la clase, es muy similar al del ejemplo simple de más arriba, pero en lugar de crear una instancia de la cláse genérica <code>Gtk.Window</code>, creamos una instancia de <code>MyWindow</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FAD 2013 - São Paulo]]></title>
    <link href="http://gracca.github.io/blog/2013/06/13/fad-2013-sao-paulo/"/>
    <updated>2013-06-13T18:00:00-03:00</updated>
    <id>http://gracca.github.io/blog/2013/06/13/fad-2013-sao-paulo</id>
    <content type="html"><![CDATA[<p>El pasado sábado 1 de junio se llevó a cabo un <a href="https://fedoraproject.org/wiki/FAD_SP_2013">Fedora Activity Day</a> (FAD) en la <a href="http://br.redhat.com">Red Hat</a> de São Paulo, organizado por <a href="https://fedoraproject.org/wiki/User:Lvaz">Leonardo Vaz</a>, embajador del <a href="http://fedoraproject.org/es">Proyecto Fedora</a> e ingeniero de Red Hat. El objetivo principal de la reunión fue una serie de charlas, sobre las cuales voy a referirme muy brevemente a seguir.</p>

<p><a href="http://gracca.github.io/images/eu-fad-redhat.jpg"><img class="center" src="http://gracca.github.io/images/eu-fad-redhat.jpg" width="320" height="240" title="FAD 2013 - São Paulo"></a></p>

<!-- more -->


<p>El mismo Leonardo comenzó con una charla llamada <em>"Making things happen: How to contribute to Fedora"</em>, donde nos recordó algunas de las características de Fedora: un proyecto Open Source, enfocado en el desarrollo de nuevas tecnologías, donde las contribuciones al código se hacen directamente upstream, dirigido por una comunidad de voluntarios, donde tiene su lugar la transparencia y la meritocracia. Un poco más adelante, Leo nos cuenta cómo podemos contribuir con Fedora, a saber, como Escritor de Contenidos, Diseñador, Relaciones Públicas, Desarrollador del SO, Traductor, Desarrollador Web o Administrador. Finalmente, nos habla con más detalles sobre los sub-grupos dentro del Proyecto Fedora, principalmente sobre Embajadores, Internacionalización (i18n), Empaquetadores y Pruebas (QA), donde nos explica qué tareas se realizan, cuáles son los requisitos para participar, y qué procedimientos deben llevarse a cabo para unirse a un determinado sub-grupo. Fue una charla muy provechosa y entretenida.</p>

<p>La siguiente charla, llamada <em>"Contributing to Fedora and Upstream "</em>, estuvo a cargo de <a href="https://fedoraproject.org/wiki/User:Sergiodj">Sergio Durigan Jr</a>, empaquetador de Fedora y desarrollador de Red Hat, quien nos habló un poco sobre su experiencia con el <a href="http://es.wikipedia.org/wiki/GNU_Debugger">GDB</a>, sobre cómo es su día a día dentro de este proyecto, y su contribución upstream. Sergio nos hace saber que él es el mantenedor del GDB en Red Hat, y que dentro de Fedora él es co-mantenedor. Hubo mucha participación por parte del público haciendo preguntas a Sergio, quien nos brindó una charla muy informativa.</p>

<p>La última charla en forma de tutorial, llamado <em>"Fedora Packaging "</em>, la dio <a href="https://fedoraproject.org/wiki/User:Itamarjp">Itamar Reis Peixoto</a>, embajador y empaquetador de Fedora. Haciendo uso del notebook de cada uno, Itamar nos muestra primero cómo crear un programa en C utilizando las herramientas <a href="http://es.wikipedia.org/wiki/GNU_build_system">Autotools</a> de <a href="http://es.wikipedia.org/wiki/Proyecto_GNU">GNU</a>, para pasar luego al empaquetamiento del mismo en el formato RPM, siguiendo los <a href="https://fedoraproject.org/wiki/How_to_create_an_RPM_package/es">lineamientos específicos de Fedora</a>. Una charla muy interactiva y técnica.</p>

<p>Finalmente, quisiera agradecer a Leo por la organización y el recibimiento que nos brindó. Confieso que no conocía la Red Hat de São Paulo y realmente me sentí muy en casa mientras estuve allá. El cansancio de haber salido a las 4 de la mañana y haber llegado en casa a las 10 de la noche valió mucho la pena, no sólo por el encuentro, sino también por las grandes amistades hechas. Para finalizar, un par de fotos.</p>

<p><a href="http://gracca.github.io/images/fad01.jpg"><img class="center" src="http://gracca.github.io/images/fad01.jpg" width="400" height="299" title="FAD 2013 - São Paulo"></a></p>

<center>De izquierda a derecha: Sergio, Hugo, Claudio e Itamar. <em>(Click para ampliar.)</em></center>




<br />


<p><a href="http://gracca.github.io/images/fad02.jpg"><img class="center" src="http://gracca.github.io/images/fad02.jpg" width="400" height="299" title="FAD 2013 - São Paulo"></a></p>

<center>De izquierda a derecha: Marcos y Leonardo. <em>(Click para ampliar.)</em></center>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Usando vim como paginador | Using vim as pager]]></title>
    <link href="http://gracca.github.io/blog/2013/05/31/usando-vim-como-paginador-%7C-using-vim-as-pager/"/>
    <updated>2013-05-31T10:22:00-03:00</updated>
    <id>http://gracca.github.io/blog/2013/05/31/usando-vim-como-paginador-|-using-vim-as-pager</id>
    <content type="html"><![CDATA[<p>Uno de mis alias favoritos en mi <code>~/.bashrc</code> es uno al cual le llamo <code>vless</code> y tiene las propiedades de ser un paginador (al usar <a href="http://linux.die.net/man/1/less">less</a>) con coloreado de sintaxis (al usar <a href="http://linux.die.net/man/1/vim">vim</a>).</p>

<!-- more -->


<p>Para que el alias funcione, primero tenemos que tener instalado <code>vim</code>. Si no lo tenemos, lo hacemos de la siguiente manera:</p>

<pre><code>$ sudo yum install vim-enhanced
</code></pre>

<p>Luego, creamos el alias en el archivo <code>~/.bashrc</code>, abriéndolo con nuestro editor preferido y adicionando la siguiente línea:</p>

<pre><code>alias vless='/usr/share/vim/vim73/macros/less.sh'
</code></pre>

<p>Guardamos los cambios, cerramos el archivo, abrimos un nuevo terminal y hacemos un test para ver si funciona correctamente:</p>

<pre><code>$ vless /usr/share/vim/vim73/macros/less.sh
</code></pre>

<p>lo cual nos debería mostrar algo así:</p>

<p><img class="center" src="http://gracca.github.io/images/vless.png" title="Paginando con vless" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mostrar cita (fortune) sobre Linux | Show a fortune about Linux]]></title>
    <link href="http://gracca.github.io/blog/2013/05/28/mostrar-cita-fortune-sobre-linux-%7C-show-a-fortune-about-linux/"/>
    <updated>2013-05-28T04:43:00-03:00</updated>
    <id>http://gracca.github.io/blog/2013/05/28/mostrar-cita-fortune-sobre-linux-|-show-a-fortune-about-linux</id>
    <content type="html"><![CDATA[<p>Para que se nos muestre una cita (<a href="http://linux.die.net/man/6/fortune">fortune</a>) cada vez que abrimos un terminal, basta instalar los siguientes programas en Fedora:</p>

<pre><code>$ sudo yum install cowsay fortune-mod
</code></pre>

<!-- more -->


<p>Para que la cita sea sobre Linux y además sea dicha por <a href="http://es.wikipedia.org/wiki/Tux">Tux</a>, hacemos lo siguiente:</p>

<pre><code>$ cd ~
$ echo "fortune linux | cowsay -f tux" &gt;&gt; .bashrc
</code></pre>

<p>Luego abrimos un nuevo terminal y aparecerá algo como esto:</p>

<p><img class="center" src="http://gracca.github.io/images/fortune-linux.png" title="Cita (fortune)" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dimensión de las imágenes | Image dimensions]]></title>
    <link href="http://gracca.github.io/blog/2013/05/27/dimension-de-las-imagenes-%7C-image-dimensions/"/>
    <updated>2013-05-27T22:26:00-03:00</updated>
    <id>http://gracca.github.io/blog/2013/05/27/dimension-de-las-imagenes-|-image-dimensions</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://gracca.github.io/images/resize-icon.png" ></p>

<p>La mayoría de las veces es necesario especificar la dimensión de las imágenes que se colocan en el blog. No sé como harán los demás, pero yo abría la imagen con algún programa e intentaba redimensionar manteniendo las proporciones, después copiaba el nuevo tamaño y listo.</p>

<!-- more -->


<p>Para no tener que hacer todo eso cada vez que voy a poner una imagen en el blog, escribí el siguiente script de bash, el cual es muy simple y necesita de <a href="http://www.imagemagick.org">ImageMagick</a> instalado en el sistema para que funcione:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>imgdim  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/usr/bin/env bash&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Author: Germán A. Racca <span class="o">(</span>skytux<span class="o">)</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;E-Mail: &amp;lt;gracca<span class="o">[</span>AT<span class="o">]</span>gmail<span class="o">[</span>DOT<span class="o">]</span>com&gt;&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;License: GPLv3+&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;IMAGE<span class="o">=</span><span class="nv">$1</span>
</span><span class='line'><span class="nv">RATIO</span><span class="o">=</span><span class="nv">$2</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;OUT<span class="o">=</span><span class="k">$(</span>identify -format <span class="s2">&quot;%[fx:w&lt;em&gt;($RATIO/100)] %[fx:h&lt;/em&gt;($RATIO/100)]&quot;</span> <span class="nv">$IMAGE</span><span class="k">)</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;echo -e <span class="s2">&quot;$IMAGE: \033[1mwidth\033[0m and \033[1mheight\033[0m at \033[1m$RATIO%\033[0m -&gt; \033[1m$OUT\033[0m&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>El script mantiene las proporciones y funciona especificando el nombre de la imagen y el tamaño en porcentaje (usando 100 nos da el tamaño real):</p>

<p><img class="center" src="http://gracca.github.io/images/ejemplo-imgdim.png" title="Ejemplo de uso" ></p>
]]></content>
  </entry>
  
</feed>
